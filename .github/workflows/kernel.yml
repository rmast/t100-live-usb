name: Build Noble Custom Kernel
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install necessary dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev libudev-dev libpci-dev libiberty-dev

      # Download and compile the custom kernel
      - name: Download and Compile Custom Kernel
        run: |
          # Define the kernel version
          KERNEL_VERSION=6.10.7
          # Download the kernel source
          wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${KERNEL_VERSION}.tar.xz
          tar -xvf linux-${KERNEL_VERSION}.tar.xz
          cd linux-${KERNEL_VERSION}
          # Generate default config
          make defconfig
          # Automatically modify the .config file to set the required parameters
          # Enable and set the following kernel options
          sed -i 's/# CONFIG_IPU_BRIDGE is not set/CONFIG_IPU_BRIDGE=y/' .config
          sed -i 's/# CONFIG_VIDEO_INTEL_IPU6 is not set/CONFIG_VIDEO_INTEL_IPU6=y/' .config
          sed -i 's/# CONFIG_INTEL_VSC is not set/CONFIG_INTEL_VSC=y/' .config
          sed -i 's/# CONFIG_VIDEO_IPU3_CIO2 is not set/CONFIG_VIDEO_IPU3_CIO2=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP is not set/CONFIG_VIDEO_ATOMISP=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_OV2722 is not set/CONFIG_VIDEO_ATOMISP_OV2722=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_GC2235 is not set/CONFIG_VIDEO_ATOMISP_GC2235=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_MSRLIST_HELPER is not set/CONFIG_VIDEO_ATOMISP_MSRLIST_HELPER=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_MT9M114 is not set/CONFIG_VIDEO_ATOMISP_MT9M114=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_GC0310 is not set/CONFIG_VIDEO_ATOMISP_GC0310=y/' .config
          # Alternatively, append to the config if they aren't present at all
          echo "CONFIG_IPU_BRIDGE=y" >> .config
          echo "CONFIG_VIDEO_INTEL_IPU6=y" >> .config
          echo "CONFIG_INTEL_VSC=y" >> .config
          echo "CONFIG_VIDEO_IPU3_CIO2=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_OV2722=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_GC2235=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_MSRLIST_HELPER=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_MT9M114=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_GC0310=y" >> .config
          # Compile the kernel
          make -j$(nproc)
          # Compile and install modules
          sudo make modules_install

      # Package the kernel
      - name: Package Kernel
        run: |
          cd linux-${KERNEL_VERSION}
          # Create a temporary directory for packaging
          mkdir -p ../kernel-package/DEBIAN
          mkdir -p ../kernel-package/boot
          mkdir -p ../kernel-package/lib/modules
          # Copy kernel image
          cp arch/x86/boot/bzImage ../kernel-package/boot/vmlinuz-${KERNEL_VERSION}-custom
          # Copy System.map and config
          cp System.map ../kernel-package/boot/System.map-${KERNEL_VERSION}-custom
          cp .config ../kernel-package/boot/config-${KERNEL_VERSION}-custom
          # Copy modules
          cp -r /lib/modules/${KERNEL_VERSION}-custom ../kernel-package/lib/modules/
          # Create control file
          cat << EOF > ../kernel-package/DEBIAN/control
          Package: linux-image-${KERNEL_VERSION}-custom
          Version: ${KERNEL_VERSION}-1
          Architecture: amd64
          Maintainer: Your Name <your.email@example.com>
          Description: Custom Linux kernel
           This package contains a custom compiled Linux kernel.
          EOF
          # Create postinst script
          cat << EOF > ../kernel-package/DEBIAN/postinst
          #!/bin/sh
          set -e
          depmod ${KERNEL_VERSION}-custom
          update-initramfs -c -k ${KERNEL_VERSION}-custom
          update-grub
          EOF
          chmod 755 ../kernel-package/DEBIAN/postinst
          # Build the package
          cd ..
          dpkg-deb --build kernel-package linux-image-${KERNEL_VERSION}-custom.deb

      # Store the generated .deb file as artifact
      - name: Upload Kernel .deb File
        uses: actions/upload-artifact@v3
        with:
          name: kernel-deb
          path: linux-image-*.deb
