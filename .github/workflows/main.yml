name: Build Debian Live with Custom Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install necessary dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev libudev-dev libpci-dev libiberty-dev debhelper dpkg-dev live-build

      # Download and compile the custom kernel
      - name: Download and Compile Custom Kernel
        run: |
          # Define the kernel version
          KERNEL_VERSION=6.10.7

          # Download the kernel source
          wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${KERNEL_VERSION}.tar.xz
          tar -xvf linux-${KERNEL_VERSION}.tar.xz
          cd linux-${KERNEL_VERSION}

          # Generate default config
          make defconfig

          # Automatically modify the .config file to set the required parameters
          # Enable and set the following kernel options
          sed -i 's/# CONFIG_IPU_BRIDGE is not set/CONFIG_IPU_BRIDGE=y/' .config
          sed -i 's/# CONFIG_VIDEO_INTEL_IPU6 is not set/CONFIG_VIDEO_INTEL_IPU6=y/' .config
          sed -i 's/# CONFIG_INTEL_VSC is not set/CONFIG_INTEL_VSC=y/' .config
          sed -i 's/# CONFIG_VIDEO_IPU3_CIO2 is not set/CONFIG_VIDEO_IPU3_CIO2=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP is not set/CONFIG_VIDEO_ATOMISP=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_OV2722 is not set/CONFIG_VIDEO_ATOMISP_OV2722=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_GC2235 is not set/CONFIG_VIDEO_ATOMISP_GC2235=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_MSRLIST_HELPER is not set/CONFIG_VIDEO_ATOMISP_MSRLIST_HELPER=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_MT9M114 is not set/CONFIG_VIDEO_ATOMISP_MT9M114=y/' .config
          sed -i 's/# CONFIG_VIDEO_ATOMISP_GC0310 is not set/CONFIG_VIDEO_ATOMISP_GC0310=y/' .config

          # Alternatively, append to the config if they aren't present at all
          echo "CONFIG_IPU_BRIDGE=y" >> .config
          echo "CONFIG_VIDEO_INTEL_IPU6=y" >> .config
          echo "CONFIG_INTEL_VSC=y" >> .config
          echo "CONFIG_VIDEO_IPU3_CIO2=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_OV2722=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_GC2235=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_MSRLIST_HELPER=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_MT9M114=y" >> .config
          echo "CONFIG_VIDEO_ATOMISP_GC0310=y" >> .config

          # Compile the kernel and build .deb packages
          make -j$(nproc) bindeb-pkg

          
      # Store the generated .deb files as artifacts
      - name: Upload Kernel .deb Files
        uses: actions/upload-artifact@v4
        with:
          name: kernel-debs
          path: ./*.deb
          if-no-files-found: warn
          compression-level: 6
          overwrite: false


      # Setup live-build configuration and include the custom kernel and extra packages
      - name: Configure live-build for Debian
        run: |
          # Create directories for live-build configuration
          mkdir -p live-build/config/packages.chroot
          mv ./*.deb live-build/config/packages.chroot      
          mkdir -p live-build/config/package-lists

          # Move custom kernel .deb files to live-build package directory
          # Include additional packages (add more packages as needed)
          echo "efivar" > live-build/config/package-lists/my.list.chroot
          echo "efibootmgr" >> live-build/config/package-lists/my.list.chroot
      
      # Configure live-build for Debian 12 (Bookworm)
      - name: Configure live-build for Debian 12
        run: |
          cd live-build
          lb config \
            --distribution bookworm \
            --mirror-bootstrap http://deb.debian.org/debian/ \
            --mirror-chroot http://deb.debian.org/debian/ \
            --mirror-chroot-security http://deb.debian.org/debian-security/ \
            --mirror-binary http://deb.debian.org/debian/ \
            --mirror-binary-security http://deb.debian.org/debian-security/

      # Build the live image
      - name: Build Debian Live ISO
        run: |
          cd live-build
          sudo lb build

      # Upload the live image ISO as an artifact
      - name: Upload Live ISO
        uses: actions/upload-artifact@v3
        with:
          name: debian-live-custom.iso
          path: live-build/*.iso
